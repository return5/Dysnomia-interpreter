--[[
    This file is part of Dysnomia interpreter.

    Dysnomia Interpreter is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 3 of the License only.

    Dysnomia Interpreter is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along with Dysnomia Interpreter. If not, see <https://www.gnu.org/licenses/>.
]]

return {
	Comment = "Comment",
	String = "String",
	Token = "Token",
	Plus = "Plus",
	PlusAssignment = "PlusAssignment",
	Minus = "Minus",
	MinusAssignment = "MinusAssignment",
	Slash = "Slash",
	SlashAssignment = "SlashAssignment",
	Star = "Star",
	StarAssignment = "StarAssignment",
	OpenBracket = "OpenBracket",
	OpenCurlyBracket = "OpenCurlyBracket",
	OpenParenthesis = "OpenParenthesis",
	ClosingParenthesis = "ClosingParenthesis",
	ClosingBracket = "ClosingBracket",
	ClosingCurlyBracket = "ClosingCurlyBracket",
	Comma = "Comma",
	Colon = "Colon",
	SemiColon = "SemiColon",
	Period = "Period",
	Bang = "Bang",
	BangEquals = "BangEquals",
	LessThan = "LessThan",
	LessThanEquals = "LessThanEquals",
	GreaterThan = "GreaterThan",
	GreaterThanEquals = "GreaterThanEquals",
	Equal = "Equal",
	EqualEquals = "EqualEquals",
	Digit = "Digit",
	Identifier = "Identifier",
	And = "And",
	Or = "Or",
	While = "While",
	Nil = "Nil",
	If = "If",
	Class = "Class",
	True = "True",
	Self = "Self",
	Until = "Until",
	Repeat = "Repeat",
	Return = "Return",
	Record = "Record",
	Else = "Else",
	ElseIf = "ElseIf",
	For = "For",
	False = "False",
	End = "End",
	Function = "Function",
	Then = "Then",
	Local = "Local",
	Const = "Const",
	Mutable = "Mutable",
	Immutable = "Immutable",
	Global = "Global",
	Error = "Error",
	Arrow = "Arrow",
	Do = "Do",
	PoundSign = "PoundSign",
	Metamethod = "Metamethod",
	Method = "Method",
	Super = "Super",
	Inherent = "Inherent",
	Constructor = "Constructor",
	Static = "Static",
	NewLine = "NewLine",
	EOF = "EOF"
}
